<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.sm.mapper.GoodsDao">
    
    <resultMap type="goods" id="allGoodsMap">
        <id property="id" column="id"/>
        <result property="goodsName" column="goods_name"/>
        <result property="goodsPrice" column="goods_Price"/>
        <result property="goodsPic" column="goods_pic"/>
        <result property="state" column="state"/>
        
    </resultMap>
    

    <select id="findAllGoods" resultMap="allGoodsMap">
      select *from goods;  
        
    </select>
    
    <select id="findPageCountByPagesize" parameterType="int" resultType="int">
        select count(*) from Goods;
    </select>
    <select id="findGoodsByPage" parameterType="page" resultMap="allGoodsMap">
        
        select *from Goods limit #{npage},#{pageSize};
    </select>
    
    <delete id="deleteGoodsById" parameterType="int" >
        delete from goods where id =#{id};
    </delete>
    
    <insert id="addGoods" parameterType="goods">
        insert into goods(goods_name,goods_price,goods_pic,state) values(
        #{goodsName},#{goodsPrice},#{goodsPic},#{state}
        )
        
    </insert>
    
    <select id="findGoodsById" parameterType="int" resultMap="allGoodsMap">
        
        select *from goods where id=#{id}
    </select>
    
    <select id="findGoodsByPrice" parameterType="serchprice" resultMap="allGoodsMap">
        select *from goods
        <where>
            and 1=1
            <if test="goodsName!=null and goodsName!=''">
                and goods_name like '%${goodsName}%'
            </if>
            <if test="minPrice!=null and minPrice!=0" >
                and goods_price &gt;= #{minPrice}
            </if>
            <if test="maxPrice!=null and minPrice!=0">
                and goods_price &lt;= #{maxPrice}
            </if>
        </where>
        
    </select>
    
    
    <select id="findGoodsByLikeName" parameterType="string" resultMap="allGoodsMap">
        SELECT *FROM goods WHERE goods_name LIKE "%${value}%";
    </select>
    
    <select id="updateGoodsById" parameterType="goods">
        update goods set goods_name=#{goodsName},goods_price=#{goodsPrice}
        ,goods_pic=#{goodsPic},state=#{state} where id =#{id}
    </select>
    
    <delete id="deleteAllGoods" parameterType="int">
        delete from goods 
        <where>
            id in 
            <foreach collection="array" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </where>
        
        
    </delete>
    
    </mapper>